# Generated by Django 2.0.2 on 2018-02-28 15:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('library', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auth_follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Auth_follow',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='category_images/')),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'Country',
            },
        ),
        migrations.CreateModel(
            name='wish_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'wish_list',
            },
        ),
        migrations.AddField(
            model_name='author',
            name='follow',
            field=models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='picture',
            field=models.ImageField(blank=True, null=True, upload_to='author_images/'),
        ),
        migrations.AddField(
            model_name='book',
            name='picture',
            field=models.ImageField(blank=True, null=True, upload_to='book_images/'),
        ),
        migrations.AddField(
            model_name='book',
            name='wishlist',
            field=models.ManyToManyField(related_name='wishlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='author',
            name='bio',
            field=models.TextField(max_length=1000),
        ),
        migrations.AlterField(
            model_name='book',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.Country'),
        ),
        migrations.AlterField(
            model_name='book',
            name='summary',
            field=models.TextField(max_length=1000),
        ),
        migrations.AddField(
            model_name='wish_list',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.Book'),
        ),
        migrations.AddField(
            model_name='wish_list',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='auth_follow',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.Author'),
        ),
        migrations.AddField(
            model_name='auth_follow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='Category',
            field=models.ManyToManyField(to='library.Category'),
        ),
        migrations.AlterUniqueTogether(
            name='wish_list',
            unique_together={('user', 'book')},
        ),
        migrations.AlterUniqueTogether(
            name='auth_follow',
            unique_together={('user', 'author')},
        ),
    ]
